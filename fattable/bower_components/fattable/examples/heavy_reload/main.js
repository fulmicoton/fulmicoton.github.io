// Generated by CoffeeScript 1.7.1
(function() {
  var LogData, dummy_appender, limiter, line_id, log_data, new_table, painter,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  LogData = (function(_super) {
    __extends(LogData, _super);

    function LogData() {
      this.lines = [];
    }

    LogData.prototype.getCellSync = function(i, j, cb) {
      return this.lines[this.nb_records - 1 - i][j];
    };

    LogData.prototype.getHeaderSync = function(j) {
      return ["date", "log line"][j];
    };

    LogData.prototype.hasCell = function(i, j) {
      return i < this.lines.length && j < 2;
    };

    LogData.prototype.appendLine = function(record) {
      this.nb_records = this.lines.length + 1;
      return this.lines.push(record);
    };

    return LogData;

  })(fattable.SyncTableModel);

  painter = new fattable.Painter;

  log_data = new LogData();

  line_id = 0;

  limiter = function(f, delay) {
    var done, ellapsed, execute, to_do;
    done = false;
    to_do = false;
    execute = function() {
      done = true;
      f();
      return window.setTimeout(ellapsed, delay);
    };
    ellapsed = function() {
      if (to_do) {
        to_do = false;
        return execute();
      } else {
        return done = false;
      }
    };
    return function() {
      if (!done) {
        return execute();
      } else {
        return to_do = true;
      }
    };
  };

  dummy_appender = function(cb) {
    var aux;
    aux = function() {
      var delay, i, _i;
      for (i = _i = 0; _i < 500; i = ++_i) {
        log_data.appendLine([new Date(), "Line " + line_id]);
        line_id += 1;
      }
      delay = 20;
      cb();
      if (line_id < 100000) {
        return window.setTimeout(aux, delay);
      }
    };
    return aux();
  };

  new_table = function() {
    var table;
    table = fattable({
      "container": "#container",
      "model": log_data,
      "nbRows": log_data.nb_records,
      "rowHeight": 35,
      "headerHeight": 35,
      "painter": painter,
      "columnWidths": [300, 500]
    });
    return table.setup();
  };

  $(function() {
    var cb;
    cb = limiter(new_table, 100);
    dummy_appender(cb);
    return window.onresize = function() {
      return table.setup();
    };
  });

}).call(this);
